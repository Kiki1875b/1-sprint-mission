plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
    id 'jacoco'
}


group = 'com.sprint.mission'
version = '1.2-M8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


repositories {
    mavenCentral()
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


    // Utility Libraries
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.springframework.boot:spring-boot-starter-aop'


    implementation 'org.postgresql:postgresql:42.7.4'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    //s3
    implementation 'software.amazon.awssdk:s3:2.31.16'

    // localstack
    testImplementation 'org.testcontainers:localstack:1.20.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

}

tasks.named('test') {
    useJUnitPlatform()
}


tasks.withType(JavaCompile) {
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}

checkstyle {
    ignoreFailures = true
    toolVersion = '10.12.1'
    configFile = rootProject.file('checkstyle.xml')
    configFile = file("${rootProject.projectDir}/checkstyle.xml")
}

